{"remainingRequest":"C:\\Users\\syste\\admin-view\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\syste\\admin-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\syste\\admin-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\syste\\admin-view\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\syste\\admin-view\\src\\App.vue","mtime":1601519827579},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Employees</h1>\n    <employee-table :employees=\"employees\" @delete:employee=\"deleteEmployee\" @edit:employee=\"editEmployee\"/>\n    <employee-form @add:employee=\"addEmployee\" />\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue'\nimport EmployeeForm from '@/components/EmployeeForm.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      employees: [\n        {\n          id: 1,\n          name: 'Richard Hendricks',\n          email: 'richard@piedpiper.com',\n        },\n        {\n          id: 2,\n          name: 'Bertram Gilfoyle',\n          email: 'gilfoyle@piedpiper.com',\n        },\n        {\n          id: 3,\n          name: 'Dinesh Chugtai',\n          email: 'dinesh@piedpiper.com',\n        },\n      ],\n    }\n  },\n  mounted(){\n   this.getEmployees()\n  },\n  methods:{\n    addEmployee(employee) {\n    const lastId =\n    this.employees.length > 0\n      ? this.employees[this.employees.length - 1].id\n      : 0;\n    const id = lastId + 1;\n    const newEmployee = { ...employee, id };\n    this.employees = [...this.employees, newEmployee];\n  },\n\n    deleteEmployee(id) {\n    this.employees = this.employees.filter(\n      employee => employee.id !== id\n    )\n    },\n    editEmployee(id, updatedEmployee) {\n    this.employees = this.employees.map(employee =>\n    employee.id === id ? updatedEmployee : employee\n    )\n   },\n   async getEmployees() {\n   try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await response.json()\n    this.employees = data\n   } catch (error) {\n    console.error(error)\n   }\n  },\n  async addEmployee(employee) {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n      method: 'POST',\n      body: JSON.stringify(employee),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    })\n    const data = await response.json()\n    this.employees = [...this.employees, data]\n  } catch (error) {\n    console.error(error)\n  }\n  },\n  async editEmployee(id, updatedEmployee) {\n  try {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(updatedEmployee),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    })\n    const data = await response.json()\n    this.employees = this.employees.map(employee => (employee.id === id ? data : employee))\n  } catch (error) {\n    console.error(error)\n  }\n },\n async deleteEmployee(id) {\n  try {\n    await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"DELETE\"\n    });\n    this.employees = this.employees.filter(employee => employee.id !== id);\n  } catch (error) {\n    console.error(error);\n  }\n  },\n  \n  }\n}\n</script>\n\n<style>\n  button {\n    background: #009435;\n    border: 1px solid #009435;\n  }\n\n  .small-container {\n    max-width: 680px;\n  }\n</style>\n\n\n"],"sourceRoot":"src"}]}