{"remainingRequest":"C:\\Users\\syste\\admin-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\syste\\admin-view\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\syste\\admin-view\\src\\App.vue","mtime":1601519827579},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\syste\\admin-view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYnV0dG9uIHsKICBiYWNrZ3JvdW5kOiAjMDA5NDM1OwogIGJvcmRlcjogMXB4IHNvbGlkICMwMDk0MzU7Cn0KCi5zbWFsbC1jb250YWluZXIgewogIG1heC13aWR0aDogNjgwcHg7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" class=\"small-container\">\n    <h1>Employees</h1>\n    <employee-table :employees=\"employees\" @delete:employee=\"deleteEmployee\" @edit:employee=\"editEmployee\"/>\n    <employee-form @add:employee=\"addEmployee\" />\n  </div>\n</template>\n\n<script>\nimport EmployeeTable from '@/components/EmployeeTable.vue'\nimport EmployeeForm from '@/components/EmployeeForm.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    EmployeeTable,\n    EmployeeForm,\n  },\n  data() {\n    return {\n      employees: [\n        {\n          id: 1,\n          name: 'Richard Hendricks',\n          email: 'richard@piedpiper.com',\n        },\n        {\n          id: 2,\n          name: 'Bertram Gilfoyle',\n          email: 'gilfoyle@piedpiper.com',\n        },\n        {\n          id: 3,\n          name: 'Dinesh Chugtai',\n          email: 'dinesh@piedpiper.com',\n        },\n      ],\n    }\n  },\n  mounted(){\n   this.getEmployees()\n  },\n  methods:{\n    addEmployee(employee) {\n    const lastId =\n    this.employees.length > 0\n      ? this.employees[this.employees.length - 1].id\n      : 0;\n    const id = lastId + 1;\n    const newEmployee = { ...employee, id };\n    this.employees = [...this.employees, newEmployee];\n  },\n\n    deleteEmployee(id) {\n    this.employees = this.employees.filter(\n      employee => employee.id !== id\n    )\n    },\n    editEmployee(id, updatedEmployee) {\n    this.employees = this.employees.map(employee =>\n    employee.id === id ? updatedEmployee : employee\n    )\n   },\n   async getEmployees() {\n   try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await response.json()\n    this.employees = data\n   } catch (error) {\n    console.error(error)\n   }\n  },\n  async addEmployee(employee) {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users', {\n      method: 'POST',\n      body: JSON.stringify(employee),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    })\n    const data = await response.json()\n    this.employees = [...this.employees, data]\n  } catch (error) {\n    console.error(error)\n  }\n  },\n  async editEmployee(id, updatedEmployee) {\n  try {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(updatedEmployee),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    })\n    const data = await response.json()\n    this.employees = this.employees.map(employee => (employee.id === id ? data : employee))\n  } catch (error) {\n    console.error(error)\n  }\n },\n async deleteEmployee(id) {\n  try {\n    await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n      method: \"DELETE\"\n    });\n    this.employees = this.employees.filter(employee => employee.id !== id);\n  } catch (error) {\n    console.error(error);\n  }\n  },\n  \n  }\n}\n</script>\n\n<style>\n  button {\n    background: #009435;\n    border: 1px solid #009435;\n  }\n\n  .small-container {\n    max-width: 680px;\n  }\n</style>\n\n\n"]}]}